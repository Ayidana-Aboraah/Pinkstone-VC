package Graph

import (
	"github.com/go-echarts/go-echarts/v2/charts"
	"github.com/go-echarts/go-echarts/v2/opts"
	"github.com/go-echarts/go-echarts/v2/types"
	"math/rand"
	"net/http"
)

var Labels *[]string

// generate random data for bar chart
func generateBarItems() []opts.BarData {
	items := make([]opts.BarData, 0)
	for i := 0; i < 7; i++ {
		items = append(items, opts.BarData{Value: rand.Intn(300)})
	}
	return items
}


func generateLineValues(inputs []float64) []opts.LineData {
	items := make([]opts.LineData, 0)
	for i := 0; i < len(inputs); i++ {
		items = append(items, opts.LineData{Value: inputs[i]})
	}
	return items
}

func CreateBarGraph(w http.ResponseWriter){
	// create a new bar instance
	bar := charts.NewBar()
	// set some global options like Title/Legend/ToolTip or anything else
	bar.SetGlobalOptions(charts.WithTitleOpts(opts.Title{
		Title:    "My first bar chart generated by go-echarts",
		Subtitle: "It's extremely easy to use, right?",
	}))

	// Put data into instance
	bar.SetXAxis(Labels).
		AddSeries("Category A", generateBarItems()).
		AddSeries("Category B", generateBarItems())
	// Where the magic happens
	bar.Render(w)
}

func CreateLineOverTime(labels, categories []string, inputs []float64){
	// create a new line instance
	line := charts.NewLine()
	// set some global options like Title/Legend/ToolTip or anything else
	line.SetGlobalOptions(
		charts.WithInitializationOpts(opts.Initialization{PageTitle: "Bronze Hermes Data",Theme: types.ThemeWesteros}),
		charts.WithTitleOpts(opts.Title{
			Title:    "Graph",
			Subtitle: "Data",
		}))

	// Put data into instance
		line.SetXAxis("labels").
			AddSeries("categories[0]", generateLineValues([]float64{0})).
			SetSeriesOptions(charts.WithLineChartOpts(opts.LineChart{Smooth: true}))

	//line.Render(render)
}